/**
 * is-api
 * Tiny javascript library that you can extend with your own type checking methods.
 *
 * @version 1.0.1
 * @author George Raptis <georapbox@gmail.com> (georapbox.github.io)
 * @homepage https://github.com/georapbox/is-api#readme
 * @license MIT
 */
!function(n,e,t){"use strict";"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&module.exports?module.exports=t():e.is=t("is",e)}(0,this,function(n,e){"use strict";function t(n){var e=0,t=l.length;for(e;e<t;e+=1)switch(l[e]){case"not":o.not[n]=o.not(o[n]);break;case"all":o.all[n]=o.all(o[n]);break;case"any":o.any[n]=o.any(o[n])}}function r(){var n;for(n in o)c.call(o,n)&&-1===l.indexOf(n)&&-1===a.indexOf(n)&&t(n)}var o,i=(e||{})[n],l=["not","all","any"],a=["extend","noConflict"],f=Array.prototype.slice,c=Object.prototype.hasOwnProperty;return o={not:function(n){return function(){return!n.apply(null,f.call(arguments))}},all:function(n){return function(){var e,t=f.call(arguments),r=t.length;for(e=0;e<r;e+=1)if(!n.call(null,t[e]))return!1;return!0}},any:function(n){return function(){var e,t=f.call(arguments),r=t.length;for(e=0;e<r;e+=1)if(n.call(null,t[e]))return!0;return!1}},extend:function(n){var e;for(e in n)if(c.call(n,e)){if("function"!=typeof n[e])throw new TypeError("A function is expected to extend the API with.");if(-1!==l.indexOf(e)||-1!==a.indexOf(e))throw new Error(e+" is a reserved property from the library and cannot be overwritten. Reserved words are: not, any, all, extend and noConflict.");o[e]=n[e]}r()},noConflict:function(){return e&&(e[n]=i),o}}});
//# sourceMappingURL=is.min.js.map
